{"version":3,"sources":["store/actions/actionTypes.js","store/utility.js","store/actions/burgerBuilder.js","store/actions/orders.js","store/actions/auth.js","HOC/Aux.js","Components/Button/Button.js","Axios.js","Containers/Burger/BurgerIngredient/BurgerIngredient.css","UI/Spinner/Spinner.js","Components/Backdrop/Backdrop.js","Components/Input/Input.css","Components/SideDrawer/SideDrawer.css","Containers/Burger/Modal/Modal.js","HOC/withErrorHandler/withErrorHandler.js","Components/Input/Input.js","Containers/Burger/BurgerIngredient/BugerIngredient.js","Containers/Burger/Burger.js","Containers/BuildControls/BuildControl/BuildControl.css","Containers/BuildControls/BuildControls.css","Components/Button/Button.css","Components/Logo/Logo.css","Components/Navigation/NavigationItems/NavigationItem/NavigationItem.css","Components/Toolbar/Toolbar.css","Components/Order/Order.css","Containers/Burger/Modal/Modal.css","Containers/Burger/Burger.css","Components/Backdrop/Backdrop.css","UI/Spinner/Spinner.css","Components/Navigation/NavigationItems/NavigationItems.css","Components/SideDrawerToggler/SideDrawerToggler.css","Components/OrderSummary/ContactData/ContactData.css","Components/OrderSummary/OrderSummary.css","Containers/Orders/Orders.css","Containers/Auth/Auth.css","Containers/Logout/Logout.js","Containers/Auth/Auth.js","Components/Checkout/Checkout.js","Containers/BuildControls/BuildControl/BuildControl.js","Containers/BuildControls/BuildControls.js","Containers/BurgerBuilder/BurgerBuilder.js","assets/images/burger-logo.png","Components/Logo/Logo.js","Components/Navigation/NavigationItems/NavigationItem/NavigationItem.js","Components/Navigation/NavigationItems/NavigationItems.js","Components/SideDrawer/SideDrawer.js","Components/SideDrawerToggler/SideDrawerToggler.js","Components/Toolbar/Toolbar.js","HOC/asyncComponent.js","Components/Layout/Layout.js","App.js","reportWebVitals.js","store/reducers/burgerBuilder.js","store/reducers/orders.js","store/reducers/auth.js","index.js","Components/OrderSummary/ContactData/ContactData.js","Components/OrderSummary/OrderSummary.js","Components/Order/Order.js","Containers/Orders/Orders.js"],"names":["ADD_INGREDIENT","REMOVE_INGREDIENT","INIT_INGREDIENTS","FAIL_INGREDIENTS","PURCHASE_INIT","PURCHASE_START","PURCHASE_SUCCESS","PURCHASE_FAIL","FETCH_ORDER_START","FETCH_ORDER_SUCCESS","FETCH_ORDER_FAIL","AUTH_START","AUTH_SUCCESS","AUTH_FAIL","AUTH_LOGOUT","updateObject","prevState","updatedProps","addIngredient","ingName","ingPrice","type","actionTypes","ingredientName","ingredientPrice","removeIngredient","initIngredients","dispatch","axios","get","then","response","ings","data","ingredients","catch","error","failIngredient","purchaseInit","purchase","orderDetails","tokenId","post","id","purchaseSuccess","name","fetchOrders","userId","queryParams","res","orders","i","push","price","totalPrice","fetchOrdersSuccess","fetchOrdersFail","authSuccess","logout","localStorage","removeItem","authLogout","expirationTime","setTimeout","auth","email","password","isSignUp","userData","returnSecureToken","url","Date","getTime","expiresIn","setItem","idToken","localId","authFail","message","authAutoAuthenticate","getItem","Aux","props","children","Button","btnClass","classes","Continue","Cancel","onClick","clicked","className","disabled","instance","Axios","create","baseURL","module","exports","Spinner","show","Backdrop","hide","Modal","nextProp","nextState","purchasing","this","style","transform","opacity","Component","withErrorHandler","WrappedComponent","state","errorComfiredHandler","setState","resInterceptor","interceptors","use","reqInterceptor","request","req","console","log","eject","color","Input","inputClasses","InputElement","invalid","touched","Invalid","inputElement","inputtype","join","elementConfig","value","onChange","changed","options","map","option","displayValue","BurgerIngredient","ingredient","BreadBottom","BreadTop","Seeds1","Seeds2","Meat","Salad","Cheese","Bacon","Burger","transformedIngredients","Object","keys","ele","Array","_","index","reduce","acc","cur","concat","length","Logout","to","connect","actions","Auth","authForm","elementType","placeholder","elementValue","validation","required","text","isValid","inputChangedHandler","event","inputIdentifier","updatedAuthForm","updatedFormElement","target","valid","trim","split","endsWith","onAuthHandler","preventDefault","onAuth","errorMessageFormatter","errorMessage","inputElements","element","config","form","input","loading","authRedirect","isAuthenticated","redirectPath","isBuilding","Authentication","burgerBuilder","building","Checkout","isPurchasing","igKeys","fontWeight","toFixed","continuePurchase","cancelPurchase","BuildControl","label","More","addIngredientHandler","Less","removeIngredientHandler","ctrls","BuildControls","buttonStyle","isPurchasable","Enabled","Disabled","fullPrice","ctrl","addHandler","removeHandler","INGREDIENTS_PRICES","meat","salad","bacon","cheese","BurgerBuilder","purchasable","purchaseHandler","history","purchaseCancelHandler","goBack","puchaseContinueHandler","pathname","initIngredientHandler","burger","textAlign","fontSize","checkout","burgerBuilderActions","Logo","alt","src","burgerLogo","NavigationItem","exact","activeClassName","active","link","item","NavigationItems","SideDrawer","toggleClass","Close","open","Open","hideSideDrawer","SideDrawerToggler","toggleHandler","Toolbar","DesktopOnly","asyncComponent","importComponent","component","default","asyncAuthentication","asyncLogout","asyncOrderSummary","asyncOrders","Layout","toggleSideDrawer","hideSideDrawerHandler","sideDrawerToggleHandler","routes","path","App","authAuthLoginHandler","withRouter","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","reducer","action","purchased","rootReducer","combineReducers","burgerBuilderReducer","order","orderReducer","authReducer","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById","ContactData","orderForm","street","postalCode","deliveryMode","isFormValid","orderHandler","customer","onPurchase","updatedOrderForm","validities","every","validity","contactData","OrderSummary","orderContinueHandler","orderCancelHandler","initPurchase","orderSummary","match","Order","Ingredient","Number","parseFloat","Orders"],"mappings":"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","file":"static/js/main.3f206b30.chunk.js","sourcesContent":["export const ADD_INGREDIENT = 'ADD_INGREDIENT';\nexport const REMOVE_INGREDIENT = 'REMOVE_INGREDIENT';\nexport const INIT_INGREDIENTS = 'INIT_INGREDIENTS';\nexport const FAIL_INGREDIENTS = 'FAIL_INGREDIENTS';\n\nexport const PURCHASE_INIT = 'PURCHASE_INIT';\nexport const PURCHASE_START = 'PURCHASE_START';\nexport const PURCHASE_SUCCESS = 'PURCHASE_SUCCESS';\nexport const PURCHASE_FAIL = 'PURCHASE_FAIL';\n\nexport const FETCH_ORDER_START = 'FETCH_ORDER_START';\nexport const FETCH_ORDER_SUCCESS = 'FETCH_ORDER_SUCCESS';\nexport const FETCH_ORDER_FAIL = 'FETCH_ORDER_FAIL';\n\nexport const AUTH_START = 'AUTH_START';\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\nexport const AUTH_FAIL = 'AUTH_FAIL';\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT';","export const updateObject = ( prevState, updatedProps ) => {\n    return {\n        ...prevState,\n        ...updatedProps\n    }\n}","import * as actionTypes from './actionTypes';\nimport axios from '../../Axios';\n\nexport const addIngredient = ( ingName, ingPrice ) => {\n    return {\n        type: actionTypes.ADD_INGREDIENT,\n        ingredientName: ingName,\n        ingredientPrice: ingPrice\n    }\n}\n\nexport const removeIngredient = ( ingName, ingPrice ) => {\n    return {\n        type: actionTypes.REMOVE_INGREDIENT,\n        ingredientName: ingName,\n        ingredientPrice: ingPrice\n    }\n}\n\nconst initIngs = ( ings ) => {\n    return {\n        type: actionTypes.INIT_INGREDIENTS,\n        ingredients: ings\n    }\n}\n\nconst failIngredient = ( error ) => {\n    return {\n        type: actionTypes.FAIL_INGREDIENTS,\n        error: error\n    }\n}\n\nexport const initIngredients = () => {\n    return dispatch => {\n        axios.get(\"https://burger-builder-82c22-default-rtdb.firebaseio.com/ingredients.json\")\n        .then(response => {\n            dispatch(initIngs(response.data))\n        })\n        .catch(error => {\n            dispatch(failIngredient(error));\n        })\n    }\n}","import * as actionTypes from './actionTypes';\nimport axios from '../../Axios';\n\nconst purchaseSuccess = ( id, orderDetails ) => {\n    return {\n        type: actionTypes.PURCHASE_SUCCESS,\n        id: id,\n        orderDetails: orderDetails\n    }\n}\n\nconst purchaseFail = () => {\n    return {\n        type: actionTypes.PURCHASE_FAIL\n    }\n}\n\nexport const purchaseStart = () => {\n    return {\n        type: actionTypes.PURCHASE_START\n    }\n}\n\nexport const purchaseInit = () => {\n    return {\n        type: actionTypes.PURCHASE_INIT\n    }\n}\n\nexport const purchase = ( orderDetails, tokenId ) => {\n    return dispatch => {\n        dispatch(purchaseStart());\n        axios.post(\"/orders.json?auth=\" + tokenId, orderDetails)\n        .then(response => {\n           dispatch(purchaseSuccess(response.data.name, orderDetails));\n        })\n        .catch(error => {\n           dispatch(purchaseFail())\n        })\n    }\n    \n}\n\nconst fetchOrdersStart = () => {\n    return {\n        type: actionTypes.FETCH_ORDER_START\n    }\n}\n\nconst fetchOrdersSuccess = ( orders ) => {\n    return {\n        type: actionTypes.FETCH_ORDER_SUCCESS,\n        orders: orders\n    }\n}\n\nconst fetchOrdersFail = ( error ) => {\n    return {\n        type: actionTypes.FETCH_ORDER_FAIL, \n        error: error\n    }\n}\n\nexport const fetchOrders = (tokenId, userId) => {\n\n    \n    return dispatch => {\n        dispatch(fetchOrdersStart());\n        const queryParams = '?auth=' + tokenId + '&orderBy=\"userId\"&equalTo=\"'+ userId + '\"';\n        axios.get('/orders.json' + queryParams)\n        .then(res => {\n            const orders = [];\n            for (let i in res.data) {\n                orders.push({ id: i, ingredients: res.data[i].ingredients, price: res.data[i].totalPrice})\n            }\n            dispatch(fetchOrdersSuccess( orders ));\n\n        })\n        .catch(error => {\n            dispatch(fetchOrdersFail( error ));\n        });\n    }\n}","import * as actionTypes from './actionTypes';\nimport axios from 'axios';\n\nconst authStart = () => {\n    return {\n        type: actionTypes.AUTH_START\n    }\n}\n\nconst authSuccess = (tokenId, userId) => {\n    return {\n        type: actionTypes.AUTH_SUCCESS,\n        tokenId: tokenId,\n        userId: userId\n    }\n}\n \nconst authFail = (error) => {\n    return {\n        type: actionTypes.AUTH_FAIL,\n        error: error\n    }\n}\n\nexport const logout = () => {\n    localStorage.removeItem('tokenId');\n    localStorage.removeItem('userId');\n    localStorage.removeItem('expirationTime');\n    return {\n        type: actionTypes.AUTH_LOGOUT\n    }\n}\n\nexport const authLogout = (expirationTime) => {\n    return dispatch => {\n        setTimeout(() => dispatch(logout()), expirationTime * 1000)\n    }\n}\n\nexport const auth = (email, password, isSignUp) => {\n    return dispatch => {\n        dispatch(authStart());\n        const userData = {\n            email: email,\n            password: password,\n            returnSecureToken: true\n        }\n\n        let url = 'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyA0FcOyInvMgm8-tkqdMkApwdS1K29y_ow';\n\n        if (!isSignUp) {\n            url = 'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyA0FcOyInvMgm8-tkqdMkApwdS1K29y_ow';\n        }\n        axios.post(url, userData)\n        .then(response => {\n            const expirationTime = new Date(new Date().getTime() +  response.data.expiresIn * 100);\n            localStorage.setItem('tokenId', response.data.idToken);\n            localStorage.setItem('userId', response.data.localId);\n            localStorage.setItem('expirationTime', expirationTime);\n            dispatch(authSuccess(response.data.idToken, response.data.localId));\n            dispatch(authLogout(response.data.expiresIn));\n        })\n        .catch(error => {\n            dispatch(authFail(error.response.data.error.message));\n        })\n    }\n}\n\nexport const authAutoAuthenticate = () => {\n    return dispatch => {\n        const tokenId = localStorage.getItem('tokenId');\n        if (!tokenId) {\n            dispatch(logout());\n        } else {\n            const expirationTime = localStorage.getItem('expirationTime');\n            if (expirationTime < new Date()) {\n                dispatch(logout());\n            } else {\n                const userId = localStorage.getItem('userId');\n                dispatch(authSuccess(tokenId, userId));\n                dispatch(authLogout(new Date(expirationTime).getTime() - new Date().getTime()));\n            }\n        }\n    }\n}\n\n","const Aux = (props) => {\n    return (\n        <div>\n            {props.children}\n        </div>\n    )\n}\n\nexport default Aux;","import React from 'react';\nimport classes from './Button.css';\n\nconst Button = ( props ) => {\n    let btnClass;\n\n    if (props.type === 'continue') {\n        btnClass = classes.Continue;\n    } else if (props.type === 'cancel') {\n        btnClass = classes.Cancel;\n    }\n\n    return (\n        <button \n        onClick={props.clicked} \n        className={btnClass}\n        disabled={props.disabled} >{props.children}</button>\n    )\n}\n\nexport default Button;","import Axios from 'axios';\n\nconst instance = Axios.create({\n    baseURL: \"https://burger-builder-82c22-default-rtdb.firebaseio.com/\"\n});\n\nexport default instance;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"_1XhcNBy6fpqqYI_qce7on8\",\"BreadTop\":\"KyLaRejnFkam3DpD-SOrk\",\"Seeds1\":\"_2UylnmwtCqLDLHFfKgRrpA\",\"Seeds2\":\"aJLEZ5hgK7psbzurlU3y4\",\"Meat\":\"_1jQFJRpHMaGudtJhgeKaEO\",\"Cheese\":\"_29i0bAql0NPfp-trnkVPI1\",\"Salad\":\"_16PjoguNcvd9GDeWKZ77Sv\",\"Bacon\":\"-ROtTE-6or4yJqSNTNT00\"};","import React from 'react';\nimport Backdrop from '../../Components/Backdrop/Backdrop';\nimport Aux from '../../HOC/Aux';\nimport classes from './Spinner.css';\n\nconst Spinner = () => {\n    return (\n        <Aux>\n            <Backdrop show />,\n            <div className={classes.Spinner}>Loading...</div>\n        </Aux>\n        \n    );\n}\n\nexport default Spinner;","import React from 'react';\nimport classes from './Backdrop.css';\n\nconst Backdrop = ( props ) => {\n    if (props.show) return <div onClick={props.hide} className={classes.Backdrop}></div>\n    else return null;\n}\n\nexport default Backdrop;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"_3cc5JUlEnDaeT0COqxfuRM\",\"InputElement\":\"uqKHYvySV3lD-ezOYE2W6\",\"Invalid\":\"vTUXMixYkEBzox9lCyis5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideDrawer\":\"_1AvQqe8uMFjOtUiaz0iO25\",\"Open\":\"_19kls2cU0k3ArxYoprQ8EP\",\"Close\":\"_16uFBlokGAJ4QOYmmhjsK4\"};","import React, { Component } from 'react';\nimport classes from './Modal.css';\n\nclass Modal extends Component {\n\n    shouldComponentUpdate(nextProp, nextState) {\n        return nextProp.purchasing !== this.props.purchasing;\n    }\n\n    render () {\n        return (\n            <div className={classes.Modal}\n            style={\n                {\n                    transform: this.props.purchasing ? 'translate(-50%, -50%)' : 'translate(-50%, -100vh)',\n                    opacity: this.props.purchasing ? '1' : '0'\n                }\n            }\n            >\n                {this.props.children}\n            </div>\n        );\n    }\n    \n}\n\nexport default Modal;","import React, { Component } from 'react';\nimport Backdrop from '../../Components/Backdrop/Backdrop';\nimport Modal from '../../Containers/Burger/Modal/Modal';\nimport Aux from '../Aux';\n\nconst withErrorHandler = (WrappedComponent, axios) => {\n    return class extends Component {\n\n        state = {\n            error: null\n        }\n\n        componentWillMount() {\n            this.resInterceptor = axios.interceptors.response.use(response => response, error => {\n                this.setState({ error: error});\n            })\n\n            this.reqInterceptor = axios.interceptors.request.use(req => {\n                this.setState({ error: null })\n                return req;\n            }, \n            error => {\n                this.setState({error: error})\n            })\n\n            // debugging purpose\n            if (this.state.error) {\n                console.log(this.state.error)\n            }\n        }\n\n        componentWillUnmount() {\n            axios.interceptors.response.eject(this.resInterceptor);\n            axios.interceptors.request.eject(this.reqInterceptor);\n        }\n\n        errorComfiredHandler = () => {\n            this.setState({ error: null });\n        }\n\n        render () {\n            return (\n                <Aux>\n                    <Backdrop show={this.state.error} hide={this.errorComfiredHandler} />\n                    <Modal purchasing={this.state.error} >\n                        <p style={{color: \"red\"}}>{this.state.error ? this.state.error.message : null}</p>\n                    </Modal>\n                    <WrappedComponent {...this.props} />\n                </Aux>\n            );\n        }\n    }\n}\n\nexport default withErrorHandler;","import React from 'react';\nimport classes from './Input.css';\n\nconst Input = ( props ) => {\n\n    let inputClasses = [classes.InputElement];\n\n    if (props.invalid && props.touched) {\n        inputClasses.push(classes.Invalid);\n    }\n\n    let inputElement = null;\n\n    switch ( props.inputtype ) {\n        case 'input':\n            inputElement = <input \n            className={inputClasses.join(' ')} \n            {...props.elementConfig} \n            value={props.value}\n            onChange={props.changed} />\n            break;\n\n        case 'textarea':\n            inputElement = <textarea \n            className={inputClasses.join(' ')} \n            {...props.elementConfig} \n            value={props.value}\n            onChange={props.changed} />\n            break;\n\n        case 'select': \n            inputElement = \n            <select className={classes.InputElement}\n            onChange={props.changed}>\n               { \n                props.elementConfig.options.map(option => {\n                        return <option key={option.value}\n                        value={option.value}>\n                            {option.displayValue}\n                        </option>\n                    })\n               }\n            </select>\n            break;\n\n        default: \n            inputElement = \n            <input className={classes.InputElement} \n            {...props.elementConfig} \n            value={props.value}\n            onChange={props.changed} />\n            break;\n    }\n\n    return (\n        <div className={classes.Input}>\n            { inputElement }\n        </div>\n    )\n}\n\nexport default Input;","import React from 'react';\nimport classes from './BurgerIngredient.css';\n\nconst BurgerIngredient = (props) => {\n    let ingredient = null;\n\n    switch(props.type) {\n        case ('bread-bottom'): ingredient = <div className={classes.BreadBottom}></div>;\n        break;\n\n        case ('bread-top'): \n        ingredient = \n        (<div className={classes.BreadTop}>\n            <div className={classes.Seeds1}></div>\n            <div className={classes.Seeds2}></div>\n        </div>);\n        break;\n\n        case ('meat'): ingredient = <div className={classes.Meat}></div>;\n        break;\n\n        case ('salad'): ingredient = <div className={classes.Salad}></div>\n        break;\n\n        case ('cheese'): ingredient = <div className={classes.Cheese}></div>;\n        break;\n\n        case ('bacon'): ingredient = <div className={classes.Bacon}></div>\n        break;\n\n        default: ingredient = null;\n    }\n        \n        return ingredient;\n}\n\nexport default BurgerIngredient;","import React from 'react';\nimport classes from './Burger.css';\nimport BurgerIngredient from './BurgerIngredient/BugerIngredient';\n\nconst Burger = (props) => {\n    \n    let transformedIngredients = Object.keys(props.ingredients)\n    .map(ele => {\n        return [...Array(props.ingredients[ele])].map((_, index) => {\n            return <BurgerIngredient key={ele + index} type={ele} />\n        });\n    })\n    .reduce((acc, cur) => acc.concat(cur));\n\n\n    if (transformedIngredients.length === 0) {\n        transformedIngredients = <p>Please start adding ingredients to burger</p>\n    }\n\n    return (\n        <div className={classes.Burger}>\n            <BurgerIngredient type={'bread-top'} />\n            {transformedIngredients}\n            <BurgerIngredient type={'bread-bottom'} />\n        </div>\n    );\n}\n\nexport default Burger;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControl\":\"_1GslrjQmypTL3vK_G1B_rd\",\"More\":\"_2e5q9lFueiuAz84HEGQgz\",\"Less\":\"_3EYXB-gKDXRs7_yOGw3D8s\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControls\":\"paY3hwqfaPwMRszfh2zcG\",\"Enabled\":\"_2PURBitImNv8g93B0dU2b_\",\"Disabled\":\"FxvxpF3uHV-XaiwWXz6wr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Continue\":\"HFOoYo7NXkkTY3Q1oODqA\",\"Cancel\":\"_1RKR8xC2lkJhaM2UTxEZwI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"_3TCbE2jhkn94dAk9pRbUkq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"_3OkrJNYq_LCxkGMiaEmv9H\",\"active\":\"_1-KCJsmVGdR87A6KjtoJPG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"_3NgJh4G6NOgtaeS8kVIBSP\",\"DesktopOnly\":\"_3yYet3SsL8h6vWEtSwNqCF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"_2AVNrCwRbszvOZFpI8UmC5\",\"Ingredient\":\"_3PoEaaF1qerewt_rTh0W4M\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"_1k9cef0Cjs-IWNWE8mrP99\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Burger\":\"_1dYvmcAvwu7doFd5jN9Eys\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"_1DQZgBuQbOpKYprWsLV9Bf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Spinner\":\"_2YkWDKF1e_ldN0OF6-cR8a\",\"load5\":\"FqsKujbWRZAPWAgj0S-JQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItems\":\"_2euNFiEGiCXYSpk4FyGDax\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideDrawerToggler\":\"_1kX7-waUYFoYfs2nEfGR1p\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactData\":\"_24m3B0SRvW2Hu8cDHFaZxz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"OrderSummary\":\"_1V2GbO_eyTNaptY1EqkQJL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Orders\":\"r6p1uNEuFbGCxliUWXZmt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Authentication\":\"_1DSMGNnb01iyAaoQYkQbIS\"};","import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport * as actions from '../../store/actions/index';\n\nclass Logout extends Component {\n\n    componentDidMount() {\n        this.props.logout();\n    }\n\n    render() {\n        return <Redirect to='/' />;\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        logout: () => dispatch(actions.logout())\n    }\n}\n\nexport default connect(null, mapDispatchToProps)(Logout);","import React, { Component } from 'react';\nimport Button from '../../Components/Button/Button';\nimport Input from '../../Components/Input/Input';\nimport classes from './Auth.css';\nimport { connect } from 'react-redux';\nimport * as actions from '../../store/actions/index';\nimport Spinner from '../../UI/Spinner/Spinner';\nimport { Redirect } from 'react-router-dom';\n\nclass Auth extends Component {\n\n    state = {\n        authForm: {\n            email: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'email',\n                    placeholder: 'Email'\n                },\n                elementValue: '',\n                validation: {\n                    required: {\n                        text: true,\n                        email: true\n                    },\n                    isValid: false,\n                    touched: false\n                }\n            },\n\n            password: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'password',\n                    placeholder: 'Password'\n                },\n                elementValue: '',\n                validation: {\n                    required: {\n                        text: true,\n                        password: true\n                    },\n                    isValid: false,\n                    touched: false\n                }\n            }\n        }\n    }\n\n    inputChangedHandler = (event, inputIdentifier) => {\n        const updatedAuthForm = { ...this.state.authForm };\n        const updatedFormElement = { ...updatedAuthForm[inputIdentifier] };\n        updatedFormElement.elementValue = event.target.value;\n\n        // validating\n        const valid = this.isValid(updatedFormElement.elementValue, updatedFormElement.validation.required)\n        updatedFormElement.validation.isValid = valid;\n\n        // validating touched\n        updatedFormElement.validation.touched = true;\n\n        updatedAuthForm[inputIdentifier] = updatedFormElement;\n        this.setState({ authForm: updatedAuthForm });\n    }\n\n    isValid = (value, required) => {\n        let isValid = true;\n\n        if (required.text) {\n            isValid = value.trim() !== '';\n        }\n\n        if (required.email) {\n            const emailValues = value.trim().split('@');\n            isValid = (emailValues.length > 1) && value.trim().endsWith('.com');\n        }\n\n        if (required.password) {\n            isValid = value.length >= 7;\n        }\n\n        return isValid;\n    }\n\n    onAuthHandler = (event, isSignUp) => {\n        event.preventDefault();\n        this.props.onAuth(this.state.authForm.email.elementValue, this.state.authForm.password.elementValue, isSignUp);\n    }\n\n    errorMessageFormatter = (errorMessage) => {\n        const errorValues = errorMessage.split('_');\n        return errorValues.join(' ');\n    }\n\n    render() {\n\n        const inputElements = [];\n\n        for (let element in this.state.authForm) {\n            inputElements.push({\n                id: element,\n                config: this.state.authForm[element]\n            })\n        };\n\n        let form = inputElements.map(input => {\n\n            return <Input key={input.id}\n                inputtype={input.config.elementType}\n                elementConfig={input.config.elementConfig}\n                value={input.config.elementValue}\n                changed={(event) => this.inputChangedHandler(event, input.id)}\n                invalid={!input.config.validation.isValid}\n                touched={input.config.validation.touched}\n            />\n        })\n\n        if (this.props.loading) {\n            form = <Spinner />\n        }\n\n        let error = null;\n\n        if (this.props.error) {\n            console.log(this.errorMessageFormatter(this.props.error));\n            error = <p>{this.errorMessageFormatter(this.props.error)}</p>\n        }\n\n        let authRedirect = null;\n        if (this.props.isAuthenticated) {\n            let redirectPath = '/';\n            redirectPath = this.props.isBuilding ? '/checkout' : '/';\n            authRedirect = <Redirect to={redirectPath} />;\n        }\n\n        return (\n            <div className={classes.Authentication}>\n                {authRedirect}\n                {error}\n                <form>\n                    {form}\n                    <Button clicked={(event) => this.onAuthHandler(event, true)} type='continue'>Sign Up</Button>\n                    <Button clicked={(event) => this.onAuthHandler(event, false)} type='cancel'>Sign in</Button>\n                </form>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        loading: state.auth.loading,\n        error: state.auth.error,\n        isAuthenticated: state.auth.tokenId !== null,\n        isBuilding: state.burgerBuilder.building\n    }\n}\nconst mapDispatchToProps = dispatch => {\n    return {\n        onAuth: (email, password, isSignUp) => dispatch(actions.auth(email, password, isSignUp))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Auth);","import React from 'react';\nimport Modal from '../../Containers/Burger/Modal/Modal';\nimport './Checkout.css';\nimport Button from '../Button/Button.js';\n\nconst Checkout = ( props ) => {\n    return (\n        <div >\n            <Modal purchasing={props.isPurchasing}>\n                <h3>Checkout</h3>\n                <p>Following ingredients in your delicious burger:</p>\n                <ul>\n                    {\n                        Object.keys(props.ingredients).map(igKeys => {\n                            return <li key={igKeys}>{igKeys}:<span\n                            style={{ fontWeight: 'bold' }}> {props.ingredients[igKeys]} </span></li>\n                        })\n                    }\n                </ul>\n                <h4>Total bill of your burger: ${props.price.toFixed(2)}</h4>\n                <p>Continue to pay:</p>\n                <Button clicked={props.continuePurchase} type={'continue'}>CONTINUE</Button>\n                <Button clicked={props.cancelPurchase} type={'cancel'}>CANCEL</Button>\n            </Modal>\n        </div>\n    );\n}\n\nexport default Checkout;","import React from 'react';\nimport classes from './BuildControl.css';\n\nconst BuildControl = ( props ) => {\n    return (\n        <div className={classes.BuildControl}>\n            <p>{props.label}</p>\n            <button className={classes.More}\n            onClick={props.addIngredientHandler}>More</button>\n            <button className={classes.Less}\n            onClick={props.removeIngredientHandler}>Less</button>\n        </div>\n    )\n}\n\nexport default BuildControl;","import React from 'react';\nimport BuildControl from './BuildControl/BuildControl';\nimport classes from './BuildControls.css';\n\nconst ctrls = [\n    {label: 'Salad', type: 'salad'},\n    {label: 'Bacon', type: 'bacon'},\n    {label: 'Cheese', type: 'cheese'},\n    {label: 'Meat', type: 'meat'}\n]\n\nconst BuildControls = ( props ) => {\n\n    let buttonStyle = null;\n    props.isPurchasable ? buttonStyle = classes.Enabled : buttonStyle = classes.Disabled;\n   \n    return (\n        <div className={classes.BuildControls}>\n            <p>Total price of burger: ${props.fullPrice}</p>\n            {\n                ctrls.map(ctrl => {\n                    return <BuildControl label={ctrl.label} \n                    key={ctrl.label}\n                    addIngredientHandler={() => props.addHandler(ctrl.type)}\n                    removeIngredientHandler={() => props.removeHandler(ctrl.type)} />\n                })\n            }\n            <button \n            onClick={props.isPurchasable ? props.purchase : null}\n            className={buttonStyle}>\n                {props.isAuthenticated ? 'ORDER NOW' : 'SIGN IN TO ORDER'}\n            </button>\n        </div>\n    );\n    \n}\n\nexport default BuildControls;","import React, { Component } from \"react\";\nimport Checkout from \"../../Components/Checkout/Checkout\";\nimport Aux from \"../../HOC/Aux\";\nimport BuildControls from \"../BuildControls/BuildControls\";\nimport Burger from \"../Burger/Burger\";\nimport axios from \"../../Axios\";\nimport Spinner from \"../../UI/Spinner/Spinner\";\nimport Backdrop from \"../../Components/Backdrop/Backdrop\";\nimport withErrorHandler from \"../../HOC/withErrorHandler/withErrorHandler\";\nimport { connect } from \"react-redux\";\nimport * as burgerBuilderActions from \"../../store/actions/index\";\n\nconst INGREDIENTS_PRICES = {\n    meat: 0.4,\n    salad: 0.2,\n    bacon: 1,\n    cheese: 0.7,\n};\n\nconst INITIAL_PRICE = 4;\n\nclass BurgerBuilder extends Component {\n    state = {\n        purchasable: false,\n        purchasing: false,\n    };\n\n    componentDidMount() {\n        this.props.initIngredientHandler();\n    }\n\n    purchaseHandler = () => {\n        if (this.props.isAuthenticated) {\n            this.setState({ purchasing: true });\n        } else {\n            this.props.history.push('/authentication');\n        }\n        \n    };\n\n    purchaseCancelHandler = () => {\n        this.setState({ purchasing: false });\n        this.props.history.goBack();\n    };\n\n    puchaseContinueHandler = () => {\n        // let queryParams = [];\n        // for (let i in this.state.ingredients) {\n        //     queryParams.push(encodeURIComponent(i) + '=' + encodeURIComponent(this.state.ingredients[i]))\n        // }\n\n        // queryParams.push('totalPrice=' + this.state.totalPrice);\n\n        // const searchQuery = queryParams.join('&')\n\n        this.props.history.push({\n            pathname: \"/checkout\",\n        });\n    };\n\n    // addIngredientHandler = ( type ) => {\n\n    //     // changes to the ingredients\n    //     const ingredient = this.state.ingredients[type] + 1;\n    //     const newIngredients = this.state.ingredients;\n    //     newIngredients[type] = ingredient;\n\n    //     // changes to the total price\n    //     let newPrice = this.state.totalPrice;\n    //     newPrice += INGREDIENTS_PRICES[type];\n\n    //     this.setState({\n    //         ingredients: newIngredients,\n    //         totalPrice: newPrice,\n    //         purchasable: newPrice > INITIAL_PRICE\n    //     });\n    // }\n\n    // removeIngredientHandler = ( type ) => {\n    //     if (this.state.ingredients[type] > 0) {\n    //         const ingredient = this.state.ingredients[type] - 1;\n    //         const newIngredients = this.state.ingredients;\n    //         newIngredients[type] = ingredient;\n\n    //         let newPrice = this.state.totalPrice;\n    //         newPrice -= INGREDIENTS_PRICES[type];\n\n    //         this.setState({\n    //             ingredients: newIngredients,\n    //             totalPrice: newPrice,\n    //             purchasable: newPrice > INITIAL_PRICE\n    //         });\n    //     }\n    // }\n\n    isPurchasable = (totalPrice) => {\n        if (totalPrice > INITIAL_PRICE) return true;\n        else return false;\n    };\n\n    render() {\n        let burger = this.props.error ? (\n            <p style={{ textAlign: \"center\", color: \"#fff\", fontSize: \"2rem\" }}>\n                Ingredients can't be loaded!\n            </p>\n        ) : (\n            <Spinner />\n        );\n        let checkout = null;\n\n        if (this.props.ings) {\n            burger = [\n                <Burger key={\"burger\"} ingredients={this.props.ings} />,\n                <BuildControls\n                    key={\"build-controls\"}\n                    purchase={this.purchaseHandler}\n                    isPurchasable={this.isPurchasable(this.props.totalPrice)}\n                    fullPrice={this.props.totalPrice.toFixed(2)}\n                    addHandler={(ingredientName) =>\n                        this.props.addIngredientHandler(\n                            ingredientName,\n                            INGREDIENTS_PRICES[ingredientName]\n                        )\n                    }\n                    removeHandler={(ingredientName) =>\n                        this.props.removeIngredientHandler(\n                            ingredientName,\n                            INGREDIENTS_PRICES[ingredientName]\n                        )\n                    }\n                    isAuthenticated={this.props.isAuthenticated}\n                />,\n            ];\n\n            checkout = (\n                <Checkout\n                    price={this.props.totalPrice}\n                    continuePurchase={this.puchaseContinueHandler}\n                    cancelPurchase={this.purchaseCancelHandler}\n                    isPurchasing={this.state.purchasing}\n                    ingredients={this.props.ings}\n                />\n            );\n        }\n\n        // if (this.state.loading) {\n        //     checkout = <Spinner />\n        // }\n\n        return (\n            <Aux>\n                <Backdrop\n                    show={this.state.purchasing}\n                    hide={this.purchaseCancelHandler}\n                />\n                {checkout}\n                {burger}\n            </Aux>\n        );\n    }\n}\n\nconst mapPropsToState = (state) => {\n    return {\n        ings: state.burgerBuilder.ingredients,\n        totalPrice: state.burgerBuilder.totalPrice,\n        error: state.burgerBuilder.error,\n        isAuthenticated: state.auth.tokenId !== null\n    };\n};\n\nconst dispatchMapToProps = (dispatch) => {\n    return {\n        addIngredientHandler: (ingredientName, ingredientPrice) =>\n            dispatch(\n                burgerBuilderActions.addIngredient(ingredientName, ingredientPrice)\n            ),\n        removeIngredientHandler: (ingredientName, ingredientPrice) =>\n            dispatch(\n                burgerBuilderActions.removeIngredient(ingredientName, ingredientPrice)\n            ),\n        initIngredientHandler: () =>\n            dispatch(burgerBuilderActions.initIngredients()),\n    };\n};\n\nexport default connect(\n    mapPropsToState,\n    dispatchMapToProps\n)(withErrorHandler(BurgerBuilder, axios));\n","export default __webpack_public_path__ + \"static/media/burger-logo.ec69c7f6.png\";","import React from 'react';\nimport burgerLogo from '../../assets/images/burger-logo.png';\nimport classes from './Logo.css';\n\nconst Logo = () => { \n    return (\n        <div className={classes.Logo}>\n            <img alt={\"Burger Logo\"} className={classes.Logo} src={burgerLogo} />\n        </div>\n    )\n}\n\nexport default Logo;","import React from 'react';\nimport classes from './NavigationItem.css';\nimport { NavLink } from 'react-router-dom';\n\nconst NavigationItem = ( props ) => {\n    return(\n        <li className={classes.NavigationItem}>\n            <NavLink\n            exact={props.exact}\n            activeClassName={classes.active}\n            to={props.link}>{props.item}</NavLink>\n        </li>\n    )\n}\n\nexport default NavigationItem;","import React from 'react';\nimport NavigationItem from './NavigationItem/NavigationItem';\nimport classes from './NavigationItems.css';\n\nconst NavigationItems = (props) => {\n\n    return (\n        <ul className={classes.NavigationItems}>\n            <NavigationItem\n                exact\n                link={'/'}\n                item={'Burger Builder'} />\n\n            {\n                props.isAuthenticated ? <NavigationItem\n                    link={'/orders'}\n                    item={'Orders'} /> : null\n            }\n\n            {!props.isAuthenticated ? <NavigationItem\n                link={'/authentication'}\n                item={'Authentication'} /> :\n                <NavigationItem\n                    link={'/logout'}\n                    item={'Log out'} />}\n        </ul>\n    );\n}\n\nexport default NavigationItems;","import React from 'react';\nimport Aux from '../../HOC/Aux';\nimport Backdrop from '../Backdrop/Backdrop';\nimport Logo from '../Logo/Logo';\nimport NavigationItems from '../Navigation/NavigationItems/NavigationItems';\nimport classes from './SideDrawer.css';\n\nconst SideDrawer = (props) => {\n\n    let toggleClass = [classes.SideDrawer, classes.Close];\n\n    if (props.open) {\n        toggleClass = [classes.SideDrawer, classes.Open]\n    }\n\n    return (\n        <Aux>\n            <Backdrop show={props.open}\n            hide={props.hideSideDrawer} />\n            <div className={toggleClass.join(' ')} onClick={props.hideSideDrawer}>\n                <Logo/>\n                <NavigationItems isAuthenticated={props.isAuthenticated} />\n            </div>  \n        </Aux>\n        \n        \n    )\n    \n}\n\nexport default SideDrawer;","import React from 'react';\nimport classes from './SideDrawerToggler.css';\n\nconst SideDrawerToggler = ( props ) => {\n    return (\n        <div className={classes.SideDrawerToggler}\n        onClick={props.toggleHandler}>\n            <div></div>\n        </div>\n    );\n}\n\nexport default SideDrawerToggler;","import React from 'react';\nimport classes from './Toolbar.css';\nimport Logo from '../Logo/Logo';\nimport NavigationItems from '../Navigation/NavigationItems/NavigationItems';\nimport SideDrawerToggler from '../SideDrawerToggler/SideDrawerToggler';\n\nconst Toolbar = ( props ) => {\n    return (\n        <header className={classes.Toolbar}>\n            <SideDrawerToggler toggleHandler={props.clicked} />\n            <Logo />\n            <nav className={classes.DesktopOnly}>\n                <NavigationItems isAuthenticated={props.isAuthenticated} />\n            </nav>\n        </header>\n    )\n}\n\nexport default Toolbar;","import React, { Component } from 'react';\n\nconst asyncComponent = (importComponent) => {\n    return class extends Component {\n        state = {\n            component: null\n        }\n\n        componentDidMount() {\n            importComponent()\n            .then(component => this.setState({ component: component.default }));\n        }\n        render() {\n            const Component = this.state.component;\n            return Component ? <Component {...this.props} /> : null;\n        }\n    }\n}\n\nexport default asyncComponent;","import React, { Component } from 'react';\nimport BurgerBuilder from '../../Containers/BurgerBuilder/BurgerBuilder';\nimport Aux from '../../HOC/Aux';\nimport SideDrawer from '../SideDrawer/SideDrawer';\nimport Toolbar from '../Toolbar/Toolbar';\nimport OrderSummary from '../../Components/OrderSummary/OrderSummary';\nimport Logout from '../../Containers/Logout/Logout';\nimport { Route, Switch } from 'react-router-dom';\nimport Orders from '../../Containers/Orders/Orders';\nimport Authentication from '../../Containers/Auth/Auth';\nimport { connect } from 'react-redux';\nimport asyncComponent from '../../HOC/asyncComponent';\n\n// Lazy loading\nconst asyncAuthentication = asyncComponent(() => import('../../Containers/Auth/Auth'));\nconst asyncLogout = asyncComponent(() => import('../../Containers/Logout/Logout'));\nconst asyncOrderSummary = asyncComponent(() => import('../../Components/OrderSummary/OrderSummary'));\nconst asyncOrders = asyncComponent(() => import('../../Containers/Orders/Orders'));\n\nclass Layout extends Component {\n\n    state = {\n        toggleSideDrawer: false\n    }\n\n\n    hideSideDrawerHandler = () => {\n        this.setState({\n            toggleSideDrawer: false\n        })\n    }\n\n    sideDrawerToggleHandler = () => {\n        this.setState(\n            (prevState) => {\n                return { toggleSideDrawer: !prevState.toggleSideDrawer }\n            }\n        )\n    }\n\n    render() {\n        let routes = (\n            <Switch>\n                <Route path='/' exact component={BurgerBuilder} />\n                <Route path='/authentication' component={asyncAuthentication} />\n            </Switch>\n        );\n\n        if (this.props.isAuthenticated) {\n            routes = (\n                <Switch>\n                    <Route path='/' exact component={BurgerBuilder} />\n                    <Route path='/authentication' component={asyncAuthentication} />\n                    <Route path='/checkout' component={asyncOrderSummary} />\n                    <Route path='/orders' component={asyncOrders} />\n                    <Route path='/logout' component={asyncLogout} />\n                </Switch>\n            )\n        }\n        return (\n            <Aux>\n                {/* <div>Toolbar, Sidebar, Backdrop</div> */}\n                <Toolbar clicked={this.sideDrawerToggleHandler} isAuthenticated={this.props.isAuthenticated} />\n                <SideDrawer open={this.state.toggleSideDrawer}\n                    hideSideDrawer={this.hideSideDrawerHandler}\n                    isAuthenticated={this.props.isAuthenticated} />\n                <main>\n                    {routes}\n                </main>\n            </Aux>\n        );\n    }\n\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        isAuthenticated: state.auth.tokenId !== null\n    }\n}\n\nexport default connect(mapStateToProps)(Layout);","import './App.css';\nimport Aux from './HOC/Aux';\nimport Layout from './Components/Layout/Layout';\nimport { Component } from 'react';\nimport { BrowserRouter, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport * as actions from './store/actions/index';\n\nclass App extends Component {\n\n  componentDidMount() {\n    this.props.authAuthLoginHandler();\n  }\n\n  render() {\n    return (\n      <BrowserRouter>\n        <Aux>\n          <Layout />\n        </Aux>\n      </BrowserRouter>\n    );\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    authAuthLoginHandler: () => dispatch(actions.authAutoAuthenticate())\n  }\n}\n\nexport default withRouter(connect(null, mapDispatchToProps)(App));\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../utility';\n\nexport const initialState = {\n    ingredients: null,\n    totalPrice: 4,\n    error: false, \n    building: false\n}\n\nconst reducer = ( state = initialState, action ) => {\n    let updatedProps;\n    switch ( action.type ) {\n        case actionTypes.ADD_INGREDIENT:\n            updatedProps = {\n                ingredients: {\n                    ...state.ingredients,\n                    [action.ingredientName]: state.ingredients[action.ingredientName] + 1\n                },\n                totalPrice: state.totalPrice + action.ingredientPrice,\n                building: true\n            }\n            return updateObject(state, updatedProps);\n           \n        case actionTypes.REMOVE_INGREDIENT:\n            updatedProps = {\n                ingredients: {\n                    ...state.ingredients,\n                    [action.ingredientName]: state.ingredients[action.ingredientName] - 1\n                },\n                totalPrice: state.totalPrice - action.ingredientPrice,\n                building: true\n            }\n            return updateObject(state, updatedProps);\n        \n        case actionTypes.INIT_INGREDIENTS:\n            updatedProps = {\n                totalPrice: initialState.totalPrice,\n                ingredients: action.ingredients,\n                error: false,\n                building: false\n            }\n            return updateObject(state, updatedProps);\n        \n        case actionTypes.FAIL_INGREDIENTS: \n            \n            return updateObject(state, { error: true });\n\n        default: return state;\n    }\n}\n\nexport default reducer;","import * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../utility';\n\nconst initialState = {\n    orders: [],\n    loading: false, \n    purchased: false\n}\n\nconst reducer = (state = initialState, action) => {\n    let updatedProps;\n\n    switch(action.type) {\n        case actionTypes.PURCHASE_INIT:\n            return updateObject(state, { purchased: false });\n       \n        case actionTypes.PURCHASE_START:\n            return updateObject(state, { loading: true });\n          \n        case actionTypes.PURCHASE_SUCCESS:\n            const orderDetails = {\n                id: action.id,\n                ...action.orderDetails\n            }\n            updatedProps = {\n                loading: false,\n                purchased: true,\n                orders: state.orders.concat({ orderDetails: orderDetails })\n            } \n            return updateObject(state, updatedProps);\n          \n        case actionTypes.PURCHASE_FAIL:\n        return updateObject(state, { loading: false });\n          \n        case actionTypes.FETCH_ORDER_START:\n            return updateObject(state, { loading: true });\n           \n        case actionTypes.FETCH_ORDER_SUCCESS:\n\n            updatedProps = {\n                loading: false,\n                orders: action.orders\n            }\n            return updateObject(state, updatedProps);\n            \n        case actionTypes.FETCH_ORDER_FAIL:\n            return updateObject(state, { loading: false});\n            \n        default: return state\n    }\n}\n\nexport default reducer;","import * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../utility';\nconst initialState = {\n    tokenId: null,\n    userId: null,\n    error: null,\n    loading: false\n}\n\n\nconst reducer = (state = initialState, action) => {\n    let updatedProps;\n    switch (action.type) {\n        case actionTypes.AUTH_START:\n            updatedProps = {\n                loading: true,\n                error: null\n            }\n            return updateObject(state, updatedProps);\n        case actionTypes.AUTH_SUCCESS:\n            updatedProps = {\n                tokenId: action.tokenId,\n                userId: action.userId,\n                error: null,\n                loading: false\n            }\n            return updateObject(state, updatedProps);\n        case actionTypes.AUTH_FAIL:\n            updatedProps = {\n                error: action.error,\n                loading: false\n            }\n            return updateObject(state, updatedProps);\n        case actionTypes.AUTH_LOGOUT:\n            return updateObject(state, { tokenId: null, userId: null });\n        default: return state;\n    }\n}\n\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\nimport burgerBuilderReducer from './store/reducers/burgerBuilder';\nimport orderReducer from './store/reducers/orders';\nimport authReducer from './store/reducers/auth';\nimport { createStore, applyMiddleware, combineReducers } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\n\nconst rootReducer = combineReducers({\n  burgerBuilder: burgerBuilderReducer,\n  order: orderReducer,\n  auth: authReducer\n});\n\nconst store = createStore(rootReducer, applyMiddleware( thunk ));\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n        <BrowserRouter >\n          <App />\n        </BrowserRouter>\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import React, { Component } from 'react';\nimport Spinner from '../../../UI/Spinner/Spinner';\nimport Button from '../../Button/Button';\nimport classes from './ContactData.css';\nimport Input from '../../Input/Input';\nimport { Redirect, withRouter } from 'react-router';\nimport { connect } from 'react-redux';\nimport * as actions from '../../../store/actions/index';\nimport { updateObject } from '../../../store/utility';\n\nclass ContactData extends Component {\n\n    state = {\n        orderForm: {\n            name: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Your Name'\n                },\n                elementValue: '',\n                validation: {\n                    required: {\n                        text: true,\n                        email: false\n                    },\n                    isValid: false,\n                    touched: false\n                }\n            },\n            email: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'email',\n                    placeholder: 'Email'\n                },\n                elementValue: '',\n                validation: {\n                    required: {\n                        text: false,\n                        email: true\n                    },\n                    isValid: false,\n                    touched: false\n                }\n            },\n            street: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Street'\n                },\n                elementValue: '',\n                validation: {\n                    required: {\n                        text: true,\n                        email: false\n                    },\n                    isValid: false,\n                    touched: false\n                }\n            },\n            postalCode: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Postal Code'\n                },\n                elementValue: '',\n                validation: {\n                    required: {\n                        text: true,\n                        email: false\n                    },\n                    isValid: false,\n                    touched: false\n                }\n            },\n            deliveryMode: {\n                elementType: 'select',\n                elementConfig: {\n                    options: [\n                        { value: 'fastest', displayValue: 'Fastest' },\n                        { value: 'cheapest', displayValue: 'Cheapest' }\n                    ]\n                },\n                validation: {\n                    required: {\n                        text: false,\n                        email: false\n                    },\n                    isValid: true,\n                    touched: true\n                }\n            }\n\n        },\n        isFormValid: false\n    }\n\n\n    orderHandler = (event) => {\n        event.preventDefault();\n\n        const orderDetails = {\n            ingredients: this.props.ings,\n            totalPrice: this.props.price,\n            customer: {\n                name: \"Arpan Bari\",\n                deliveryMode: \"Faster\"\n            },\n            userId: this.props.userId\n        }\n\n        this.props.onPurchase(orderDetails, this.props.tokenId);\n\n    }\n\n    inputChangedHandler = (event, inputIdentifier) => {\n\n        const updatedOrderForm = { ...this.state.orderForm };\n        const updatedFormElement = { ...updatedOrderForm[inputIdentifier] };\n        updatedFormElement.elementValue = event.target.value;\n\n        // validating\n        const valid = this.isValid(updatedFormElement.elementValue, updatedFormElement.validation.required)\n        updatedFormElement.validation.isValid = valid;\n\n        // validating touched\n        updatedFormElement.validation.touched = true;\n\n        updatedOrderForm[inputIdentifier] = updatedFormElement;\n\n        this.setState({ orderForm: updatedOrderForm });\n\n        // validating isFormValid\n        const validities = [];\n        for (let input in updatedOrderForm) {\n            validities.push(updatedOrderForm[input].validation.isValid);\n        }\n\n        const isFormValid = validities.every(validity => validity);\n        this.setState({ isFormValid: isFormValid });\n\n    }\n\n    isValid = (value, required) => {\n        let isValid = true;\n\n        if (required.text) {\n            isValid = value.trim() !== '';\n        }\n\n        if (required.email) {\n            const emailValues = value.trim().split('@');\n            isValid = (emailValues.length > 1) && value.trim().endsWith('.com');\n        }\n\n        return isValid;\n    }\n\n    render() {\n\n        const inputElements = [];\n\n        for (let element in this.state.orderForm) {\n            inputElements.push({\n                id: element,\n                config: this.state.orderForm[element]\n            })\n        };\n\n        let form = inputElements.map(input => {\n\n            return <Input key={input.id}\n                inputtype={input.config.elementType}\n                elementConfig={input.config.elementConfig}\n                value={input.config.elementValue}\n                changed={(event) => this.inputChangedHandler(event, input.id)}\n                invalid={!input.config.validation.isValid}\n                touched={input.config.validation.touched}\n            />\n        })\n\n        if (this.props.loading) {\n            form = <Spinner />\n        }\n\n        let contactData = (\n            <div className={classes.ContactData}>\n                <h3>Enter your credentials</h3>\n                {form}\n                <Button\n                    type='continue'\n                    clicked={this.orderHandler}\n                    disabled={!this.state.isFormValid} >\n                    ORDER\n                </Button>\n            </div>\n        );\n\n        if (this.props.purchased || !this.props.ings) {\n            contactData = <Redirect to='/' />\n        }\n\n        return contactData;\n\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        ings: state.burgerBuilder.ingredients,\n        price: state.burgerBuilder.totalPrice,\n        loading: state.order.loading,\n        purchased: state.order.purchased,\n        tokenId: state.auth.tokenId,\n        userId: state.auth.userId\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onPurchase: (orderDetails, tokenId) => dispatch(actions.purchase(orderDetails, tokenId))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(ContactData));","import React, { Component } from 'react';\nimport { Redirect, Route, withRouter } from 'react-router';\nimport { connect } from 'react-redux';\nimport Burger from '../../Containers/Burger/Burger';\nimport Button from '../Button/Button';\nimport ContactData from './ContactData/ContactData';\nimport classes from './OrderSummary.css';\nimport * as actions from '../../store/actions/index';\n\nclass OrderSummary extends Component {\n\n\n    componentDidMount() {\n        this.props.initPurchase();\n    }\n\n    // componentWillMount() {\n\n    //     const queryParams = new URLSearchParams(this.props.location.search);\n    //     let ingredients = {};\n    //     let price = 0;\n\n    //     for (let param of queryParams.entries()) {\n    //         if (param[0] === 'totalPrice') {\n    //             price = param[1];\n    //         } else {\n    //             ingredients[param[0]] = +param[1]; \n    //         }\n    //     }\n    //     this.setState({ingredients: ingredients, totalPrice: price})\n    // }\n\n    orderContinueHandler = () => {\n        this.props.history.push('/checkout/checkout-form');\n    }\n\n    orderCancelHandler = () => {\n        this.props.history.goBack();\n    }\n\n    render () {\n\n        let orderSummary = <Redirect to='/' />\n        if (this.props.ings) {\n            orderSummary = (\n                <div className={classes.OrderSummary}>\n                    <h1>Hope this burger will be taste you delicious</h1>\n                    <Burger ingredients={this.props.ings} />\n                    <Button clicked={this.orderContinueHandler} type={'continue'}>CONTINUE</Button>\n                    <Button clicked={this.orderCancelHandler} type={'cancel'}>CANCLE</Button>\n                    <Route path={this.props.match.path + \"/checkout-form\"} component={ContactData} />\n                </div>\n            );\n        }\n\n        return orderSummary;\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        ings: state.burgerBuilder.ingredients\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        initPurchase: () => dispatch(actions.purchaseInit())\n    }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(OrderSummary));","import React from 'react';\nimport classes from './Order.css';\n\nconst Order = ( props ) => {\n\n    const ingredients = [];\n\n    for (let ingredientName in props.ingredients) {\n        ingredients.push(\n            <span key={ingredientName} \n            className={classes.Ingredient}>\n                {ingredientName}: {props.ingredients[ingredientName]}\n            </span>\n        );\n    }\n    \n    return (\n        <div className={classes.Order }>\n            <p>Ingredients: {ingredients}</p>\n            <p>Price: <strong>USD {Number.parseFloat(props.price).toFixed(2)}</strong></p>\n        </div>\n    )\n}\n\nexport default Order;","import axios from '../../Axios';\nimport React, {Component} from 'react';\nimport Order from '../../Components/Order/Order';\nimport classes from './Orders.css';\nimport Spinner from '../../UI/Spinner/Spinner';\nimport withErrorHandler from '../../HOC/withErrorHandler/withErrorHandler';\nimport { connect } from 'react-redux';\nimport * as actions from '../../store/actions/index';\n\nclass Orders extends Component {\n\n    componentDidMount() {\n        // axios.get('/orders.json')\n        // .then(res => {\n        //     const orders = [];\n        //     for (let i in res.data) {\n        //         orders.push({ id: i, ingredients: res.data[i].ingredients, price: res.data[i].totalPrice})\n        //     }\n            \n        //     this.setState({ orders: orders, loading: false})\n\n        // })\n        // .catch(error => {\n        //     this.setState({ loading: false });\n        //     return error;\n        // });\n        this.props.fetchOrders(this.props.tokenId, this.props.userId);\n    }\n\n    render() {\n\n        let orders = (\n             this.props.orders.map(order => {\n                return <Order key={order.id} ingredients={order.ingredients} price={order.price} />\n            })\n        );\n\n        if (this.props.loading) {\n            orders = <Spinner />\n        }\n\n        return (\n            <div className={classes.Orders}>\n                { orders }\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        loading: state.order.loading,\n        orders: state.order.orders,\n        tokenId: state.auth.tokenId,\n        userId: state.auth.userId\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        fetchOrders: (tokenId, userId) => dispatch(actions.fetchOrders(tokenId, userId))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(Orders, axios));"],"sourceRoot":""}